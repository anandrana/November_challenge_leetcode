# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxAncestorDiff(self, root: TreeNode) -> int:
        head=root
        
        self.ans=0
        
        def find_ancestor(target,node):
            if(node is None):
                return False
            
            if(node.val==target):
                return True
            if(find_ancestor(target,node.left) or find_ancestor(target,node.right)):
                self.ans=max(self.ans,abs(node.val-target))
                return True
            return False
        
        def preorder(root):
            if root is None:
                return 
            preorder(root.left)
            find_ancestor(root.val,head)
            preorder(root.right)
            
        preorder(root)
        return self.ans
    
            
        
